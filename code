# генератор значений веса, где вес 2 объекта потерян 
# находим средний вес 
set.seed(0)
weight=rnorm(100, 5, 2)
weight[2] = NA
m = mean(weight, na.rm=T) 
m

# считаем средний размер с 95%-доверительным интервалом
library(DescTools)
set.seed(0)
size=rnorm(100, 24, 6)
m=MeanCI(size, conf.level = 0.95) 
m
# вывод дает среднее, нижнуюю и верхнюю границы интервала
# статистическая оценка процента конверсии (200 человек зашли, 30 купили)
BinomCI(30, 200, conf.level = 0.95)
# с вероятностью 95% мы можем предположить, что процент конверсии в аналогичных условиях будет находится в диапазоне от 10,7 до 20,6%

# расчет описательных статистик 
set.seed(0)
salary=runif(1000, 30, 350)**2
hist(salary)
# получили ассиметричное распределение величин от 30 до 350

# среднее арифметическое и медиана 
mean(salary)
[1] 44699.48
median(salary)
[1] 34259.9

# дисперсия и стандартное отклонение 
var(salary)
[1] 1313837571
sd(salary)
[1] 36246.9
sqrt(var(salary))
[1] 36246.9

# квартили и межквартильный размах
quantile(salary, 0.25)
quantile(salary, 0.75)
IQR(salary)

set.seed(0)
df = data.frame(size=rnorm(100, 24, 6), joy=sample(0:1, 100, replace=T), color=sample(1:3, 100, replace=T))
df
#         size joy color
# 1   28.69116   1     3
# 2   19.33934   0     3
# 3   20.30406   0     3
# 4   24.27948   0     1
# 5   17.21769   1     1
# 6   27.46031   0     3
# 7   16.31550   1     3
# 8   33.75268   1     1
# 9   20.99582   0     1
# 10  34.06978   0     1
# 11  21.52488   0     1
# 12  18.16628   0     1
# 13  24.15230   0     3
# 14  24.16485   1     3
# 15  13.91890   0     1
# 16  30.32251   1     2
# 17  17.28241   1     3
# 18  26.01370   1     3
# 19  26.96877   0     3
# 20  24.82832   0     2
# 21  23.28725   0     2
# 22  25.18611   1     1
# 23  17.58784   1     2
# 24  19.18072   1     3
# 25  17.31741   0     2
# 26  33.48055   0     2
# 27  32.98691   0     2
# 28  25.57587   0     1
# 29  16.60259   1     1
# 30  23.97766   0     1
# 31  33.07003   0     1
# 32  21.14581   0     2
# 33  28.78750   0     1
# 34  18.15598   0     1
# 35  28.13624   1     2
# 36  18.26497   0     2
# 37  16.60976   1     1
# 38  18.25865   1     1
# 39  18.78130   1     1
# 40  18.53592   1     3
# 41  28.44766   1     2
# 42  24.41107   1     2
# 43  22.05750   1     1
# 44  17.48098   1     2
# 45  17.90443   0     3
# 46  19.39326   1     3
# 47  17.28168   0     1
# 48  21.31095   1     2
# 49  26.83042   0     1
# 50  16.91706   0     1
# 51  32.82154   1     2
# 52  16.13148   1     1
# 53  23.42085   0     1
# 54  38.21832   0     1
# 55  29.34376   0     1
# 56  22.48690   1     2
# 57  18.80542   1     2
# 58  27.49552   0     3
# 59  23.92482   0     2
# 60  21.75087   0     1
# 61  25.90731   0     1
# 62  21.06717   1     2
# 63  39.95195   1     2
# 64  34.08167   0     1
# 65  28.67750   1     1
# 66  28.27944   0     3
# 67  20.74271   1     3
# 68  29.31467   0     1
# 69  21.90843   1     3
# 70  17.95167   1     2
# 71  35.29910   0     2
# 72  18.42617   1     3
# 73  22.23482   0     3
# 74  20.31030   1     1
# 75  18.31755   1     3
# 76  27.59385   0     1
# 77  14.85831   0     2
# 78  22.76287   0     1
# 79  20.55423   0     1
# 80  15.65900   0     3
# 81  23.57750   0     2
# 82  21.41472   1     2
# 83  20.44665   0     2
# 84  29.88670   0     1
# 85  27.19446   0     3
# 86  23.45726   0     3
# 87  24.93894   1     3
# 88  19.57613   1     2
# 89  22.79195   0     2
# 90  30.61306   0     2
# 91  23.89951   1     1
# 92  24.97073   0     3
# 93  36.14857   1     1
# 94  19.77783   0     3
# 95  29.76475   1     3
# 96  34.74291   1     1
# 97  17.61501   0     2
# 98  24.10582   0     1
# 99  21.66055   0     2
# 100 21.05500   1     3
df['size']
# size
# 1   28.69116
# 2   19.33934
# 3   20.30406
# 4   24.27948
# 5   17.21769
# 6   27.46031
# 7   16.31550
# 8   33.75268
# 9   20.99582
# 10  34.06978
# 11  21.52488
# 12  18.16628
# 13  24.15230
# 14  24.16485
# 15  13.91890
# 16  30.32251
# 17  17.28241
# 18  26.01370
# 19  26.96877
# 20  24.82832
# 21  23.28725
# 22  25.18611
# 23  17.58784
# 24  19.18072
# 25  17.31741
# 26  33.48055
# 27  32.98691
# 28  25.57587
# 29  16.60259
# 30  23.97766
# 31  33.07003
# 32  21.14581
# 33  28.78750
# 34  18.15598
# 35  28.13624
# 36  18.26497
# 37  16.60976
# 38  18.25865
# 39  18.78130
# 40  18.53592
# 41  28.44766
# 42  24.41107
# 43  22.05750
# 44  17.48098
# 45  17.90443
# 46  19.39326
# 47  17.28168
# 48  21.31095
# 49  26.83042
# 50  16.91706
# 51  32.82154
# 52  16.13148
# 53  23.42085
# 54  38.21832
# 55  29.34376
# 56  22.48690
# 57  18.80542
# 58  27.49552
# 59  23.92482
# 60  21.75087
# 61  25.90731
# 62  21.06717
# 63  39.95195
# 64  34.08167
# 65  28.67750
# 66  28.27944
# 67  20.74271
# 68  29.31467
# 69  21.90843
# 70  17.95167
# 71  35.29910
# 72  18.42617
# 73  22.23482
# 74  20.31030
# 75  18.31755
# 76  27.59385
# 77  14.85831
# 78  22.76287
# 79  20.55423
# 80  15.65900
# 81  23.57750
# 82  21.41472
# 83  20.44665
# 84  29.88670
# 85  27.19446
# 86  23.45726
# 87  24.93894
# 88  19.57613
# 89  22.79195
# 90  30.61306
# 91  23.89951
# 92  24.97073
# 93  36.14857
# 94  19.77783
# 95  29.76475
# 96  34.74291
# 97  17.61501
# 98  24.10582
# 99  21.66055
# 100 21.05500

set.seed(0)
df=rbind(data.frame(food='Перчик', score=rnorm(100, 3.5, 1.2)), data.frame(food='Огурчик', score=rnorm(100, 4.1, 1.6)))
df
#         food     score
# 1    Перчик 5.0155451
# 2    Перчик 3.1085200
# 3    Перчик 5.0957591
# 4    Перчик 5.0269152
# 5    Перчик 3.9975697
# 6    Перчик 1.6520599
# 7    Перчик 2.3857196
# 8    Перчик 3.1463355
# 9    Перчик 3.4930794
# 10   Перчик 6.3855841
# 11   Перчик 4.4163122
# 12   Перчик 2.5411889
# 13   Перчик 2.1228116
# 14   Перчик 3.1526461
# 15   Перчик 3.1409419
# 16   Перчик 3.0061870
# 17   Перчик 3.8026681
# 18   Перчик 2.4296946
# 19   Перчик 4.0228200
# 20   Перчик 2.0149539
# 21   Перчик 3.2308785
# 22   Перчик 3.9528748
# 23   Перчик 3.6600036
# 24   Перчик 4.4650274
# 25   Перчик 3.4314719
# 26   Перчик 4.1043296
# 27   Перчик 4.8029232
# 28   Перчик 2.6708554
# 29   Перчик 1.9584808
# 30   Перчик 3.5560714
# 31   Перчик 3.2171521
# 32   Перчик 2.8485341
# 33   Перчик 2.9800276
# 34   Перчик 2.7206340
# 35   Перчик 4.3721009
# 36   Перчик 4.8822941
# 37   Перчик 4.6905924
# 38   Перчик 2.9845843
# 39   Перчик 4.9859649
# 40   Перчик 3.1647845
# 41   Перчик 5.6094837
# 42   Перчик 4.1728953
# 43   Перчик 2.9566592
# 44   Перчик 2.5015480
# 45   Перчик 2.1001153
# 46   Перчик 2.2212913
# 47   Перчик 1.6234615
# 48   Перчик 4.8878444
# 49   Перчик 4.4984566
# 50   Перчик 3.2272056
# 51   Перчик 3.8193648
# 52   Перчик 3.0479567
# 53   Перчик 6.4296376
# 54   Перчик 2.5455931
# 55   Перчик 3.4341470
# 56   Перчик 3.8001696
# 57   Перчик 4.2418920
# 58   Перчик 3.2928518
# 59   Перчик 0.8313197
# 60   Перчик 1.9836627
# 61   Перчик 3.9304747
# 62   Перчик 3.4867454
# 63   Перчик 2.3712210
# 64   Перчик 3.3610096
# 65   Перчик 2.5220375
# 66   Перчик 3.7907162
# 67   Перчик 1.7898819
# 68   Перчик 3.9391293
# 69   Перчик 3.7980952
# 70   Перчик 3.5783458
# 71   Перчик 3.5229877
# 72   Перчик 3.8088061
# 73   Перчик 2.7211879
# 74   Перчик 3.3569975
# 75   Перчик 4.2969628
# 76   Перчик 4.8211629
# 77   Перчик 3.6725258
# 78   Перчик 3.3586957
# 79   Перчик 2.4055180
# 80   Перчик 1.7748965
# 81   Перчик 2.5434926
# 82   Перчик 5.0048997
# 83   Перчик 4.4265706
# 84   Перчик 3.2365812
# 85   Перчик 2.9902277
# 86   Перчик 2.9972239
# 87   Перчик 4.6963842
# 88   Перчик 3.1690664
# 89   Перчик 5.0072226
# 90   Перчик 4.2760093
# 91   Перчик 5.0591748
# 92   Перчик 2.4520855
# 93   Перчик 3.5100452
# 94   Перчик 2.4429539
# 95   Перчик 4.2155108
# 96   Перчик 3.6436612
# 97   Перчик 3.1613913
# 98   Перчик 5.2471861
# 99   Перчик 3.7748235
# 100  Перчик 4.6958527
# 101 Огурчик 5.3509747
# 102 Огурчик 2.8571574
# 103 Огурчик 3.1144161
# 104 Огурчик 4.1745285
# 105 Огурчик 2.2913828
# 106 Огурчик 5.0227501
# 107 Огурчик 2.0508009
# 108 Огурчик 6.7007157
# 109 Огурчик 3.2988854
# 110 Огурчик 6.7852755
# 111 Огурчик 3.4399682
# 112 Огурчик 2.5443411
# 113 Огурчик 4.1406126
# 114 Огурчик 4.1439605
# 115 Огурчик 1.4117076
# 116 Огурчик 5.7860014
# 117 Огурчик 2.3086414
# 118 Огурчик 4.6369875
# 119 Огурчик 4.8916732
# 120 Огурчик 4.3208843
# 121 Огурчик 3.9099328
# 122 Огурчик 4.4162948
# 123 Огурчик 2.3900917
# 124 Огурчик 2.8148589
# 125 Огурчик 2.3179758
# 126 Огурчик 6.6281467
# 127 Огурчик 6.4965100
# 128 Огурчик 4.5202327
# 129 Огурчик 2.1273581
# 130 Огурчик 4.0940423
# 131 Огурчик 6.5186757
# 132 Огурчик 3.3388827
# 133 Огурчик 5.3766663
# 134 Огурчик 2.5415959
# 135 Огурчик 5.2029963
# 136 Огурчик 2.5706574
# 137 Огурчик 2.1292687
# 138 Огурчик 2.5689730
# 139 Огурчик 2.7083474
# 140 Огурчик 2.6429109
# 141 Огурчик 5.2860421
# 142 Огурчик 4.2096185
# 143 Огурчик 3.5819988
# 144 Огурчик 2.3615951
# 145 Огурчик 2.4745137
# 146 Огурчик 2.8715357
# 147 Огурчик 2.3084479
# 148 Огурчик 3.3829212
# 149 Огурчик 4.8547782
# 150 Огурчик 2.2112149
# 151 Огурчик 6.4524112
# 152 Огурчик 2.0017271
# 153 Огурчик 3.9455601
# 154 Огурчик 7.8915519
# 155 Огурчик 5.5250024
# 156 Огурчик 3.6965069
# 157 Огурчик 2.7147780
# 158 Огурчик 5.0321376
# 159 Огурчик 4.0799530
# 160 Огурчик 3.5002324
# 161 Огурчик 4.6086172
# 162 Огурчик 3.3179110
# 163 Огурчик 8.3538528
# 164 Огурчик 6.7884451
# 165 Огурчик 5.3473344
# 166 Огурчик 5.2411848
# 167 Огурчик 3.2313889
# 168 Огурчик 5.5172454
# 169 Огурчик 3.5422485
# 170 Огурчик 2.4871127
# 171 Огурчик 7.1130921
# 172 Огурчик 2.6136463
# 173 Огурчик 3.6292857
# 174 Огурчик 3.1160796
# 175 Огурчик 2.5846787
# 176 Огурчик 5.0583602
# 177 Огурчик 1.6622162
# 178 Огурчик 3.7700976
# 179 Огурчик 3.1811273
# 180 Огурчик 1.8757343
# 181 Огурчик 3.9873322
# 182 Огурчик 3.4105928
# 183 Огурчик 3.1524394
# 184 Огурчик 5.6697859
# 185 Огурчик 4.9518550
# 186 Огурчик 3.9552702
# 187 Огурчик 4.3503848
# 188 Огурчик 2.9203013
# 189 Огурчик 3.7778541
# 190 Огурчик 5.8634826
# 191 Огурчик 4.0732028
# 192 Огурчик 4.3588618
# 193 Огурчик 7.3396182
# 194 Огурчик 2.9740892
# 195 Огурчик 5.6372678
# 196 Огурчик 6.9647761
# 197 Огурчик 2.3973357
# 198 Огурчик 4.1282185
# 199 Огурчик 3.4761462
# 200 Огурчик 3.3146676

t = t.test(score~food, df) # различается ли оценка от типа корма?
t

# Welch Two Sample t-test
# data:  score by food
# t = 2.669, df = 175.23, p-value = 0.008322
# alternative hypothesis: true difference in means between group Огурчик and group Перчик is not equal to 0
# 95 percent confidence interval:
# 0.1302568 0.8695740
# sample estimates:
# mean in group Огурчик  mean in group Перчик
# 4.027118              3.527202

t$statistic
t
# 2.66903 - t-критерий

t$p.value
# [1] 0.008321692 - p-значение
# < 0.05 - Ho отвергается 

t$conf.int
# [1] 0.1302568 0.8695740  - доверительный интервал
# attr(,"conf.level")
# [1] 0.95
t$estimate
# mean in group Огурчик  mean in group Перчик - средние по группе
#               4.027118              3.527202

library(ggplot2)
ggplot(df, aes(x=food, y=score)) + stat_summary(fum.data = mean_cl_boot)
# строим график с доверительными интервалами
# график лежит в Rplot.pdf - интервалы не пересекаются, а значит есть статистически значимые различия
# - Ho-отвергается







